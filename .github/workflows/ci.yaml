name: Dotty

on:
  push:
    ## Be careful if you add or remove something here! Quoting from
    ## <https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushbranchestagsbranches-ignoretags-ignore>:
    ##
    ## > If you define only tags/tags-ignore or only branches/branches-ignore, the
    ## > workflow won't run for events affecting the undefined Git ref. If you
    ## > define neither tags/tags-ignore or branches/branches-ignore, the workflow
    ## > will run for events affecting either branches or tags.
    ##
    ## We want the CI to run on both branches and tags, so we should either have:
    ## - both (tags or tags-ignore) and (branches or branches-ignore),
    ## - or neither of them.
    ## But it's important to not have only one or the other.
    tags:
      - '*'
    branches-ignore:
      - 'gh-readonly-queue/**'
      - 'release-**'
      - 'lts-**'

env:
  DOTTY_CI_RUN: true
  DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}

# In this file, we set `--cpu-shares 4096` on every job. This might seem useless
# since it means that every container has the same weight which should be
# equivalent to doing nothing, but it turns out that OpenJDK computes
# `Runtime.getRuntime.availableProcessors` by dividing the cpu-shares value if
# it exists by 1024 (cf
# http://mail.openjdk.java.net/pipermail/hotspot-dev/2019-January/036087.html),
# so this means that we effectively run every job with 4 cores. This is much
# nicer than setting `--cpus 4` because the latter enforces CPU quotas and ends
# up slowing our jobs more than needed. It's equivalent to running the JVM with
# `-XX:ActiveProcessorCount=4`, but since our tests can spawn new JVM in many
# places, it would be very hard to ensure that this option is always passed to
# `java` (we could use the `_JAVA_OPTIONS` environment variable, but this prints
# text on stderr and so can break tests which check the output of a program).

jobs:
  test-release:
    runs-on: [ubuntu-22.04]
    container:
      image: lampepfl/dotty:2024-10-18
      options: --cpu-shares 4096
      volumes:
        - ${{ github.workspace }}/../../cache/sbt:/root/.sbt
        - ${{ github.workspace }}/../../cache/ivy:/root/.ivy2/cache
        - ${{ github.workspace }}/../../cache/general:/root/.cache
    env:
      RELEASEBUILD: yes

    steps:
      ######################################################################################
      ## WARNING: DO NOT CHANGE THE JAVA VERSION HERE. SCALA IS DISTRIBUTED USING JAVA 8. ##
      ######################################################################################
      - name: Set JDK 8 as default
        run: echo "/usr/lib/jvm/java-8-openjdk-amd64/bin" >> $GITHUB_PATH
      - name: Reset existing repo
        run: |
          git config --global --add safe.directory /__w/scala3/scala3
          git -c "http.https://github.com/.extraheader=" fetch --recurse-submodules=no "https://github.com/scala/scala3" && git reset --hard FETCH_HEAD || true

      - name: Checkout cleanup script
        uses: actions/checkout@v4

      - name: Cleanup
        run: .github/workflows/cleanup.sh

      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Add SBT proxy repositories
        run: cp -vf .github/workflows/repositories /root/.sbt/ ; true
      # Extract the release tag
      - name: Extract the release tag
        run : echo "RELEASE_TAG=3.6.2" >> $GITHUB_ENV
      # BUILD THE SDKs
      - name: Check compiler version
        shell: bash
        run : |
          sbt --batch --no-colors "show scala3-compiler-bootstrapped/version"
          version=$(sbt --batch --no-colors "show scala3-compiler-bootstrapped/version" | tee /dev/tty | grep -Eo "3\.[0-9]+\.[0-9]+(-RC[0-9]+)?")
          if [ "${version}" = "${{ env.RELEASE_TAG }}" ]; then
            echo "Compiler version '${version}' matches tag: ${{  env.RELEASE_TAG }}"
          else
            echo "Invalid compiler version '${version}', does not match tag: ${{ env.RELEASE_TAG }}"
            exit 1
          fi

  test-nightly:
    runs-on: [ubuntu-22.04]
    container:
      image: lampepfl/dotty:2024-10-18
      options: --cpu-shares 4096
      volumes:
        - ${{ github.workspace }}/../../cache/sbt:/root/.sbt
        - ${{ github.workspace }}/../../cache/ivy:/root/.ivy2/cache
        - ${{ github.workspace }}/../../cache/general:/root/.cache
    env:
      NIGHTLYBUILD: yes

    steps:
      ######################################################################################
      ## WARNING: DO NOT CHANGE THE JAVA VERSION HERE. SCALA IS DISTRIBUTED USING JAVA 8. ##
      ######################################################################################
      - name: Set JDK 8 as default
        run: echo "/usr/lib/jvm/java-8-openjdk-amd64/bin" >> $GITHUB_PATH
      - name: Reset existing repo
        run: |
          git config --global --add safe.directory /__w/scala3/scala3
          git -c "http.https://github.com/.extraheader=" fetch --recurse-submodules=no "https://github.com/scala/scala3" && git reset --hard FETCH_HEAD || true

      - name: Checkout cleanup script
        uses: actions/checkout@v4

      - name: Cleanup
        run: .github/workflows/cleanup.sh

      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Add SBT proxy repositories
        run: cp -vf .github/workflows/repositories /root/.sbt/ ; true
      # Extract the release tag
      - name: Extract the release tag
        run : echo "RELEASE_TAG=3.6.2" >> $GITHUB_ENV
      # BUILD THE SDKs
      - name: Check compiler version
        shell: bash
        run : |
          if ! sbt --batch --no-colors "show scala3-compiler-bootstrapped/version" \
            | tee /dev/tty \
            | grep -Eo "3\.[0-9]+\.[0-9]+-RC[0-9]+-bin-[0-9]{8}-[a-zA-Z0-9]{7}-NIGHTLY" >/dev/null 2>&1; then
            echo "Version used by compiler to publish nightly release does not match pattern"
          fi
  test-snapshot:
    runs-on: [ubuntu-22.04]
    container:
      image: lampepfl/dotty:2024-10-18
      options: --cpu-shares 4096
      volumes:
        - ${{ github.workspace }}/../../cache/sbt:/root/.sbt
        - ${{ github.workspace }}/../../cache/ivy:/root/.ivy2/cache
        - ${{ github.workspace }}/../../cache/general:/root/.cache

    steps:
      ######################################################################################
      ## WARNING: DO NOT CHANGE THE JAVA VERSION HERE. SCALA IS DISTRIBUTED USING JAVA 8. ##
      ######################################################################################
      - name: Set JDK 8 as default
        run: echo "/usr/lib/jvm/java-8-openjdk-amd64/bin" >> $GITHUB_PATH
      - name: Reset existing repo
        run: |
          git config --global --add safe.directory /__w/scala3/scala3
          git -c "http.https://github.com/.extraheader=" fetch --recurse-submodules=no "https://github.com/scala/scala3" && git reset --hard FETCH_HEAD || true

      - name: Checkout cleanup script
        uses: actions/checkout@v4

      - name: Cleanup
        run: .github/workflows/cleanup.sh

      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Add SBT proxy repositories
        run: cp -vf .github/workflows/repositories /root/.sbt/ ; true
      # Extract the release tag
      - name: Extract the release tag
        run : echo "RELEASE_TAG=3.6.2" >> $GITHUB_ENV
      # BUILD THE SDKs
      - name: Check compiler version
        shell: bash
        run : |
          sbt --batch --no-colors "show scala3-compiler-bootstrapped/version"
          # TODO: Fix me, Commented out to test for debug purpuse, failed during release with no info
          # Pipe through xargs to remove whitespaces
          version=$(sbt --batch --no-colors "show scala3-compiler-bootstrapped/version" | grep -oEh "3\.\d+\.\d+([-a-zA-Z1-9]+)?")
          if [ "${version}" = "${{ env.RELEASE_TAG }}" ]; then
            echo "Compiler version '${version}' matches tag: ${{  env.RELEASE_TAG }}"
          else
            echo "Invalid compiler version '${version}', does not match tag: ${{ env.RELEASE_TAG }}"
            exit 1
          fi